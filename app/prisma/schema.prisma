// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id            String     @id @default(cuid())
  email         String  @unique
  name          String?
  password      String  @default("password")
  token         String  @default("ID-XXXX-XX-XX")
  roles         RoleAssignment[]
  resources     Resource[]
  @@map (name:  "users")
}

model Role {
  id            String    @id @default(cuid())
  name          String
  details       String
  //published     Boolean @default(false)
  createdAt     DateTime  @default(now()) @map(name: "created_at")
  updatedAt     DateTime  @updatedAt @map(name: "updated_at")
  users         RoleAssignment[]
  permissions   PermissionAssignment[]
}

model RoleAssignment {
  id            String  @id @default(cuid())
  user          User @relation(fields: [userId], references: [id])
  userId        String
  role          Role @relation(fields: [roleId], references: [id])
  roleId        String
}

model Permission{
  id            String @id @default(cuid())
  name          String
  details       String
  roles         PermissionAssignment[]
}

model PermissionAssignment{
  id            String @id @default(cuid())
  role          Role @relation(fields: [roleId], references: [id])
  roleId        String
  permission    Permission @relation(fields: [permissionId], references: [id])
  permissionId  String
}

model Resource{
  id            String @id @default(cuid())
  name          String
  details       String?
  href          String
  imgRef        String?
  visible       Boolean @default(true)
  resourceType  ResourceType @relation(fields: [type], references: [id])
  type          Int
  author        User @relation(fields: [authorId], references: [id])
  authorId      String
}

model ResourceType {
  id            Int @id @default(autoincrement())
  name          String
  resource      Resource[]
}


